<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="31" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-07T23:16:22 IST" name="Suite" finished-at="2025-09-07T23:19:44 IST" duration-ms="201759">
    <groups>
      <group name="regression">
        <method signature="LoginPageTest.validLogin_standardUser()[pri:1, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="validLogin_standardUser" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.invalidLogin_wrongPassword()[pri:2, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="invalidLogin_wrongPassword" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.invalidLogin_wrongUsername()[pri:3, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="invalidLogin_wrongUsername" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.invalidLogin_blankFields()[pri:4, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="invalidLogin_blankFields" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.lockedOutUserLogin()[pri:5, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="lockedOutUserLogin" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.login_withSpacesInUsername()[pri:6, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="login_withSpacesInUsername" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.login_withCaseSensitiveUsername()[pri:7, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="login_withCaseSensitiveUsername" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.login_withSQLInjectionString()[pri:8, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="login_withSQLInjectionString" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.login_withLongUsername()[pri:9, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="login_withLongUsername" class="tests.LoginPage.LoginPageTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="LoginPageTest.validLogin_standardUser()[pri:1, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="validLogin_standardUser" class="tests.LoginPage.LoginPageTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="LoginPageTest.validLogin_standardUser()[pri:1, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="validLogin_standardUser" class="tests.LoginPage.LoginPageTest"/>
        <method signature="LoginPageTest.invalidLogin_blankFields()[pri:4, instance:tests.LoginPage.LoginPageTest@6b5894c8]" name="invalidLogin_blankFields" class="tests.LoginPage.LoginPageTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2025-09-07T23:16:22 IST" name="CartPage Tests" finished-at="2025-09-07T23:16:58 IST" duration-ms="35705">
      <class name="tests.CartPage.Test_CartNavigation">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:22 IST" name="setUp" finished-at="2025-09-07T23:16:29 IST" duration-ms="6677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:29 IST" name="beforeClass" finished-at="2025-09-07T23:16:31 IST" duration-ms="2645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyCartPageOpens()[pri:1, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:31 IST" name="verifyCartPageOpens" description="Verify that the cart page opens when clicking on the cart button" finished-at="2025-09-07T23:16:42 IST" duration-ms="10795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCartPageOpens -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:42 IST" name="captureFailure" finished-at="2025-09-07T23:16:42 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCartPageOpens status=SUCCESS method=Test_CartNavigation.verifyCartPageOpens()[pri:1, instance:tests.CartPage.Test_CartNavigation@285c08c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="verifyCartIsEmptyInitially()[pri:2, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:42 IST" name="verifyCartIsEmptyInitially" description="Verify that Cart Page is empty when no products are added" finished-at="2025-09-07T23:16:42 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCartIsEmptyInitially -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:42 IST" name="captureFailure" finished-at="2025-09-07T23:16:42 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCartIsEmptyInitially status=SUCCESS method=Test_CartNavigation.verifyCartIsEmptyInitially()[pri:2, instance:tests.CartPage.Test_CartNavigation@285c08c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="verifyContinueShoppingButton()[pri:3, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:42 IST" name="verifyContinueShoppingButton" description="Verify that user can continue shopping from cart page" finished-at="2025-09-07T23:16:43 IST" duration-ms="876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContinueShoppingButton -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:43 IST" name="captureFailure" finished-at="2025-09-07T23:16:43 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContinueShoppingButton status=SUCCESS method=Test_CartNavigation.verifyContinueShoppingButton()[pri:3, instance:tests.CartPage.Test_CartNavigation@285c08c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CartPage.Test_CartNavigation@285c08c8]" started-at="2025-09-07T23:16:43 IST" name="tearDown" finished-at="2025-09-07T23:16:44 IST" duration-ms="1178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CartPage.Test_CartNavigation -->
      <class name="tests.CartPage.Test_CartItem">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:44 IST" name="setUp" finished-at="2025-09-07T23:16:46 IST" duration-ms="1822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:46 IST" name="beforeClass" finished-at="2025-09-07T23:16:48 IST" duration-ms="1772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyAddedProductsAreInCart()[pri:3, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:48 IST" name="verifyAddedProductsAreInCart" description="Verify that the products added to the cart are displayed correctly in the cart page" finished-at="2025-09-07T23:16:49 IST" duration-ms="741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddedProductsAreInCart -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:49 IST" name="captureFailure" finished-at="2025-09-07T23:16:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddedProductsAreInCart status=SUCCESS method=Test_CartItem.verifyAddedProductsAreInCart()[pri:3, instance:tests.CartPage.Test_CartItem@2c88b9fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="verifyRemoveProductFromCart()[pri:4, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:49 IST" name="verifyRemoveProductFromCart" description="Verify that user can remove product from cart" finished-at="2025-09-07T23:16:49 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemoveProductFromCart -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:49 IST" name="captureFailure" finished-at="2025-09-07T23:16:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRemoveProductFromCart status=SUCCESS method=Test_CartItem.verifyRemoveProductFromCart()[pri:4, instance:tests.CartPage.Test_CartItem@2c88b9fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CartPage.Test_CartItem@2c88b9fc]" started-at="2025-09-07T23:16:49 IST" name="tearDown" finished-at="2025-09-07T23:16:49 IST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CartPage.Test_CartItem -->
      <class name="tests.CartPage.Test_CartCheckout">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.CartPage.Test_CartCheckout@64dafeed]" started-at="2025-09-07T23:16:49 IST" name="setUp" finished-at="2025-09-07T23:16:51 IST" duration-ms="1902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.CartPage.Test_CartCheckout@64dafeed]" started-at="2025-09-07T23:16:51 IST" name="beforeClass" finished-at="2025-09-07T23:16:53 IST" duration-ms="1672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyCheckout()[pri:0, instance:tests.CartPage.Test_CartCheckout@64dafeed]" started-at="2025-09-07T23:16:53 IST" name="verifyCheckout" description="Verify if we can checkout product(s)" finished-at="2025-09-07T23:16:57 IST" duration-ms="4244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckout -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CartPage.Test_CartCheckout@64dafeed]" started-at="2025-09-07T23:16:57 IST" name="captureFailure" finished-at="2025-09-07T23:16:57 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckout status=SUCCESS method=Test_CartCheckout.verifyCheckout()[pri:0, instance:tests.CartPage.Test_CartCheckout@64dafeed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CartPage.Test_CartCheckout@64dafeed]" started-at="2025-09-07T23:16:57 IST" name="tearDown" finished-at="2025-09-07T23:16:58 IST" duration-ms="495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CartPage.Test_CartCheckout -->
    </test> <!-- CartPage Tests -->
    <test started-at="2025-09-07T23:16:58 IST" name="Logout Tests" finished-at="2025-09-07T23:17:05 IST" duration-ms="6933">
      <class name="tests.Test_LogOut">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.Test_LogOut@30990c1b]" started-at="2025-09-07T23:16:58 IST" name="setUp" finished-at="2025-09-07T23:17:00 IST" duration-ms="2153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.Test_LogOut@30990c1b]" started-at="2025-09-07T23:17:00 IST" name="beforeClass" finished-at="2025-09-07T23:17:03 IST" duration-ms="3268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testLogOut()[pri:0, instance:tests.Test_LogOut@30990c1b]" started-at="2025-09-07T23:17:03 IST" name="testLogOut" finished-at="2025-09-07T23:17:04 IST" duration-ms="683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogOut -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.Test_LogOut@30990c1b]" started-at="2025-09-07T23:17:04 IST" name="captureFailure" finished-at="2025-09-07T23:17:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogOut status=SUCCESS method=Test_LogOut.testLogOut()[pri:0, instance:tests.Test_LogOut@30990c1b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Test_LogOut@30990c1b]" started-at="2025-09-07T23:17:04 IST" name="tearDown" finished-at="2025-09-07T23:17:05 IST" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Test_LogOut -->
    </test> <!-- Logout Tests -->
    <test started-at="2025-09-07T23:17:05 IST" name="CheckoutPage Tests" finished-at="2025-09-07T23:18:45 IST" duration-ms="100203">
      <class name="tests.CheckoutPage.Test_FinishCheckout">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.CheckoutPage.Test_FinishCheckout@4de41af9]" started-at="2025-09-07T23:18:39 IST" name="setUp" finished-at="2025-09-07T23:18:41 IST" duration-ms="1905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.CheckoutPage.Test_FinishCheckout@4de41af9]" started-at="2025-09-07T23:18:41 IST" name="beforeClass" finished-at="2025-09-07T23:18:44 IST" duration-ms="3004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testFinishCheckout()[pri:0, instance:tests.CheckoutPage.Test_FinishCheckout@4de41af9]" started-at="2025-09-07T23:18:44 IST" name="testFinishCheckout" description="Verify completing checkout process with Finish button" finished-at="2025-09-07T23:18:44 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinishCheckout -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CheckoutPage.Test_FinishCheckout@4de41af9]" started-at="2025-09-07T23:18:44 IST" name="captureFailure" finished-at="2025-09-07T23:18:44 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFinishCheckout status=SUCCESS method=Test_FinishCheckout.testFinishCheckout()[pri:0, instance:tests.CheckoutPage.Test_FinishCheckout@4de41af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CheckoutPage.Test_FinishCheckout@4de41af9]" started-at="2025-09-07T23:18:44 IST" name="tearDown" finished-at="2025-09-07T23:18:45 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CheckoutPage.Test_FinishCheckout -->
      <class name="tests.CheckoutPage.Test_verifyForm">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:05 IST" name="setUp" finished-at="2025-09-07T23:17:07 IST" duration-ms="1933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:07 IST" name="beforeClass" finished-at="2025-09-07T23:17:09 IST" duration-ms="2843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:09 IST" name="testCheckoutProcess" description="Verify checkout with valid and invalid data" data-provider="checkoutData" finished-at="2025-09-07T23:17:10 IST" duration-ms="946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutProcess -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:10 IST" name="afterMethod" finished-at="2025-09-07T23:17:11 IST" duration-ms="1013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:11 IST" name="captureFailure" finished-at="2025-09-07T23:17:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutProcess status=SUCCESS method=Test_verifyForm.testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:11 IST" name="testCheckoutProcess" description="Verify checkout with valid and invalid data" data-provider="checkoutData" finished-at="2025-09-07T23:17:22 IST" duration-ms="10902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutProcess -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:22 IST" name="afterMethod" finished-at="2025-09-07T23:17:34 IST" duration-ms="11987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:34 IST" name="testCheckoutProcess" description="Verify checkout with valid and invalid data" data-provider="checkoutData" finished-at="2025-09-07T23:17:46 IST" duration-ms="11416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutProcess -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:34 IST" name="captureFailure" finished-at="2025-09-07T23:17:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutProcess status=SUCCESS method=Test_verifyForm.testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:46 IST" name="afterMethod" finished-at="2025-09-07T23:17:56 IST" duration-ms="10632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:56 IST" name="testCheckoutProcess" description="Verify checkout with valid and invalid data" data-provider="checkoutData" finished-at="2025-09-07T23:18:07 IST" duration-ms="10636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutProcess -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:17:56 IST" name="captureFailure" finished-at="2025-09-07T23:17:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutProcess status=SUCCESS method=Test_verifyForm.testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:18:07 IST" name="afterMethod" finished-at="2025-09-07T23:18:18 IST" duration-ms="10633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:18:18 IST" name="testCheckoutProcess" description="Verify checkout with valid and invalid data" data-provider="checkoutData" finished-at="2025-09-07T23:18:28 IST" duration-ms="10557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutProcess -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:18:18 IST" name="captureFailure" finished-at="2025-09-07T23:18:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutProcess status=SUCCESS method=Test_verifyForm.testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:18:28 IST" name="afterMethod" finished-at="2025-09-07T23:18:39 IST" duration-ms="10650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:18:39 IST" name="captureFailure" finished-at="2025-09-07T23:18:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckoutProcess status=SUCCESS method=Test_verifyForm.testCheckoutProcess(java.lang.String,java.lang.String,java.lang.String,boolean)[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.CheckoutPage.Test_verifyForm@62fe6067]" started-at="2025-09-07T23:18:39 IST" name="tearDown" finished-at="2025-09-07T23:18:39 IST" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CheckoutPage.Test_verifyForm -->
    </test> <!-- CheckoutPage Tests -->
    <test started-at="2025-09-07T23:18:45 IST" name="HomePage Tests" finished-at="2025-09-07T23:19:27 IST" duration-ms="42379">
      <class name="tests.HomePage.Test_SortOption">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:22 IST" name="setUp" finished-at="2025-09-07T23:19:24 IST" duration-ms="1795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:24 IST" name="beforeClass" finished-at="2025-09-07T23:19:26 IST" duration-ms="1755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testSortByNameAToZ()[pri:1, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:26 IST" name="testSortByNameAToZ" finished-at="2025-09-07T23:19:26 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByNameAToZ -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:26 IST" name="captureFailure" finished-at="2025-09-07T23:19:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSortByNameAToZ status=SUCCESS method=Test_SortOption.testSortByNameAToZ()[pri:1, instance:tests.HomePage.Test_SortOption@557a1e2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="testSortByNameZToA()[pri:2, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:26 IST" name="testSortByNameZToA" finished-at="2025-09-07T23:19:26 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByNameZToA -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:26 IST" name="captureFailure" finished-at="2025-09-07T23:19:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSortByNameZToA status=SUCCESS method=Test_SortOption.testSortByNameZToA()[pri:2, instance:tests.HomePage.Test_SortOption@557a1e2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="testSortByPriceLowToHigh()[pri:3, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:26 IST" name="testSortByPriceLowToHigh" finished-at="2025-09-07T23:19:27 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByPriceLowToHigh -->
        <test-method signature="testSortByPriceHighToLow()[pri:4, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:27 IST" name="testSortByPriceHighToLow" finished-at="2025-09-07T23:19:27 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByPriceHighToLow -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:27 IST" name="captureFailure" finished-at="2025-09-07T23:19:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSortByPriceLowToHigh status=SUCCESS method=Test_SortOption.testSortByPriceLowToHigh()[pri:3, instance:tests.HomePage.Test_SortOption@557a1e2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:27 IST" name="captureFailure" finished-at="2025-09-07T23:19:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSortByPriceHighToLow status=SUCCESS method=Test_SortOption.testSortByPriceHighToLow()[pri:4, instance:tests.HomePage.Test_SortOption@557a1e2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.HomePage.Test_SortOption@557a1e2d]" started-at="2025-09-07T23:19:27 IST" name="tearDown" finished-at="2025-09-07T23:19:27 IST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.HomePage.Test_SortOption -->
      <class name="tests.HomePage.Test_CheckQuantityInCart">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.HomePage.Test_CheckQuantityInCart@40e10ff8]" started-at="2025-09-07T23:19:01 IST" name="setUp" finished-at="2025-09-07T23:19:03 IST" duration-ms="2427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.HomePage.Test_CheckQuantityInCart@40e10ff8]" started-at="2025-09-07T23:19:03 IST" name="beforeClass" finished-at="2025-09-07T23:19:06 IST" duration-ms="2874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="checkQuantity()[pri:0, instance:tests.HomePage.Test_CheckQuantityInCart@40e10ff8]" started-at="2025-09-07T23:19:06 IST" name="checkQuantity" finished-at="2025-09-07T23:19:22 IST" duration-ms="15970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantity -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_CheckQuantityInCart@40e10ff8]" started-at="2025-09-07T23:19:22 IST" name="captureFailure" finished-at="2025-09-07T23:19:22 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkQuantity status=SUCCESS method=Test_CheckQuantityInCart.checkQuantity()[pri:0, instance:tests.HomePage.Test_CheckQuantityInCart@40e10ff8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.HomePage.Test_CheckQuantityInCart@40e10ff8]" started-at="2025-09-07T23:19:22 IST" name="tearDown" finished-at="2025-09-07T23:19:22 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.HomePage.Test_CheckQuantityInCart -->
      <class name="tests.HomePage.Test_AddRemoveProduct">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:45 IST" name="setUp" finished-at="2025-09-07T23:18:47 IST" duration-ms="1766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:47 IST" name="beforeClass" finished-at="2025-09-07T23:18:49 IST" duration-ms="2197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="addProduct()[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:49 IST" name="addProduct" description="Test for add some products" finished-at="2025-09-07T23:18:54 IST" duration-ms="5357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProduct -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:54 IST" name="captureFailure" finished-at="2025-09-07T23:18:54 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProduct status=SUCCESS method=Test_AddRemoveProduct.addProduct()[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="addProductAndRemove()[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:54 IST" name="addProductAndRemove" description="Test for add some products then delete them" finished-at="2025-09-07T23:18:59 IST" duration-ms="5286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductAndRemove -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:59 IST" name="captureFailure" finished-at="2025-09-07T23:18:59 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProductAndRemove status=SUCCESS method=Test_AddRemoveProduct.addProductAndRemove()[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.HomePage.Test_AddRemoveProduct@275fe372]" started-at="2025-09-07T23:18:59 IST" name="tearDown" finished-at="2025-09-07T23:19:01 IST" duration-ms="1180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.HomePage.Test_AddRemoveProduct -->
    </test> <!-- HomePage Tests -->
    <test started-at="2025-09-07T23:19:27 IST" name="Login Tests" finished-at="2025-09-07T23:19:38 IST" duration-ms="11184">
      <class name="tests.LoginPage.LoginPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:27 IST" name="setUp" finished-at="2025-09-07T23:19:29 IST" duration-ms="1895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="navigateToUrl(java.lang.String)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:29 IST" name="navigateToUrl" finished-at="2025-09-07T23:19:29 IST" depends-on-methods="base.BaseTest.setUp" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToUrl -->
        <test-method signature="validLogin_standardUser()[pri:1, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:29 IST" name="validLogin_standardUser" description="Verify that a valid standard user can log in successfully." finished-at="2025-09-07T23:19:31 IST" duration-ms="1924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin_standardUser -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:31 IST" name="captureFailure" finished-at="2025-09-07T23:19:31 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin_standardUser status=SUCCESS method=LoginPageTest.validLogin_standardUser()[pri:1, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="invalidLogin_wrongPassword()[pri:2, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:31 IST" name="invalidLogin_wrongPassword" description="Verify login fails when using correct username but wrong password." finished-at="2025-09-07T23:19:32 IST" duration-ms="602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin_wrongPassword -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:32 IST" name="captureFailure" finished-at="2025-09-07T23:19:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin_wrongPassword status=SUCCESS method=LoginPageTest.invalidLogin_wrongPassword()[pri:2, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="invalidLogin_wrongUsername()[pri:3, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:32 IST" name="invalidLogin_wrongUsername" description="Verify login fails when using invalid username with correct password." finished-at="2025-09-07T23:19:33 IST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin_wrongUsername -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:33 IST" name="captureFailure" finished-at="2025-09-07T23:19:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin_wrongUsername status=SUCCESS method=LoginPageTest.invalidLogin_wrongUsername()[pri:3, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="invalidLogin_blankFields()[pri:4, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:33 IST" name="invalidLogin_blankFields" description="Verify login fails when both username and password fields are blank." finished-at="2025-09-07T23:19:33 IST" duration-ms="478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin_blankFields -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:33 IST" name="captureFailure" finished-at="2025-09-07T23:19:33 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin_blankFields status=SUCCESS method=LoginPageTest.invalidLogin_blankFields()[pri:4, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="lockedOutUserLogin()[pri:5, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:33 IST" name="lockedOutUserLogin" description="Verify login fails for a locked-out user." finished-at="2025-09-07T23:19:34 IST" duration-ms="574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutUserLogin -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:34 IST" name="captureFailure" finished-at="2025-09-07T23:19:34 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutUserLogin status=SUCCESS method=LoginPageTest.lockedOutUserLogin()[pri:5, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="login_withSpacesInUsername()[pri:6, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:34 IST" name="login_withSpacesInUsername" description="Verify login fails if username contains leading/trailing spaces." finished-at="2025-09-07T23:19:34 IST" duration-ms="644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_withSpacesInUsername -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:34 IST" name="captureFailure" finished-at="2025-09-07T23:19:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_withSpacesInUsername status=SUCCESS method=LoginPageTest.login_withSpacesInUsername()[pri:6, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="login_withCaseSensitiveUsername()[pri:7, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:34 IST" name="login_withCaseSensitiveUsername" description="Verify login fails if username is entered with wrong case (case-sensitive check)." finished-at="2025-09-07T23:19:35 IST" duration-ms="612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_withCaseSensitiveUsername -->
        <test-method signature="login_withSQLInjectionString()[pri:8, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:35 IST" name="login_withSQLInjectionString" description="Verify login fails when SQL injection string is used as username." finished-at="2025-09-07T23:19:35 IST" duration-ms="480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_withSQLInjectionString -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:35 IST" name="captureFailure" finished-at="2025-09-07T23:19:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_withCaseSensitiveUsername status=SUCCESS method=LoginPageTest.login_withCaseSensitiveUsername()[pri:7, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:35 IST" name="captureFailure" finished-at="2025-09-07T23:19:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_withSQLInjectionString status=SUCCESS method=LoginPageTest.login_withSQLInjectionString()[pri:8, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="login_withLongUsername()[pri:9, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:35 IST" name="login_withLongUsername" description="Verify login fails when username exceeds max length (long string)." finished-at="2025-09-07T23:19:38 IST" duration-ms="2561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_withLongUsername -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:38 IST" name="captureFailure" finished-at="2025-09-07T23:19:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login_withLongUsername status=SUCCESS method=LoginPageTest.login_withLongUsername()[pri:9, instance:tests.LoginPage.LoginPageTest@6b5894c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginPage.LoginPageTest@6b5894c8]" started-at="2025-09-07T23:19:38 IST" name="tearDown" finished-at="2025-09-07T23:19:38 IST" duration-ms="410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginPage.LoginPageTest -->
    </test> <!-- Login Tests -->
    <test started-at="2025-09-07T23:19:38 IST" name="Confirmation Tests" finished-at="2025-09-07T23:19:44 IST" duration-ms="5248">
      <class name="tests.ConfirmationPage.ConfirmationPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:38 IST" name="setUp" finished-at="2025-09-07T23:19:40 IST" duration-ms="1706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:40 IST" name="beforeClass" finished-at="2025-09-07T23:19:43 IST" duration-ms="2924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyOrderConfirmationMessage()[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:43 IST" name="verifyOrderConfirmationMessage" description="Verify that the order confirmation message is displayed after successful checkout" finished-at="2025-09-07T23:19:43 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderConfirmationMessage -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:43 IST" name="captureFailure" finished-at="2025-09-07T23:19:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOrderConfirmationMessage status=SUCCESS method=ConfirmationPageTest.verifyOrderConfirmationMessage()[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method signature="verifyBackHomeNavigation()[pri:1, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:43 IST" name="verifyBackHomeNavigation" description="Verify that clicking Back Home navigates user back to the inventory page" finished-at="2025-09-07T23:19:43 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBackHomeNavigation -->
        <test-method is-config="true" signature="captureFailure(org.testng.ITestResult)[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:43 IST" name="captureFailure" finished-at="2025-09-07T23:19:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBackHomeNavigation status=SUCCESS method=ConfirmationPageTest.verifyBackHomeNavigation()[pri:1, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ConfirmationPage.ConfirmationPageTest@72445aba]" started-at="2025-09-07T23:19:43 IST" name="tearDown" finished-at="2025-09-07T23:19:44 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ConfirmationPage.ConfirmationPageTest -->
    </test> <!-- Confirmation Tests -->
  </suite> <!-- Suite -->
</testng-results>
